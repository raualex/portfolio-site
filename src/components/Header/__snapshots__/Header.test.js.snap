// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="name-title"
        >
          A l e x a n d e r
          <span
            className="last-name-title"
          >
            R a u
          </span>
        </h1>,
        <h2
          className="job-title"
        >
          Front-End Web Developer
        </h2>,
      ],
      "className": "header-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "A l e x a n d e r",
            <span
              className="last-name-title"
            >
              R a u
            </span>,
          ],
          "className": "name-title",
        },
        "ref": null,
        "rendered": Array [
          "A l e x a n d e r",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "R a u",
              "className": "last-name-title",
            },
            "ref": null,
            "rendered": "R a u",
            "type": "span",
          },
        ],
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Front-End Web Developer",
          "className": "job-title",
        },
        "ref": null,
        "rendered": "Front-End Web Developer",
        "type": "h2",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="name-title"
          >
            A l e x a n d e r
            <span
              className="last-name-title"
            >
              R a u
            </span>
          </h1>,
          <h2
            className="job-title"
          >
            Front-End Web Developer
          </h2>,
        ],
        "className": "header-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "A l e x a n d e r",
              <span
                className="last-name-title"
              >
                R a u
              </span>,
            ],
            "className": "name-title",
          },
          "ref": null,
          "rendered": Array [
            "A l e x a n d e r",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "R a u",
                "className": "last-name-title",
              },
              "ref": null,
              "rendered": "R a u",
              "type": "span",
            },
          ],
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Front-End Web Developer",
            "className": "job-title",
          },
          "ref": null,
          "rendered": "Front-End Web Developer",
          "type": "h2",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
