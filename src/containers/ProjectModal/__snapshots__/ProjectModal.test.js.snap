// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectModal should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProjectModal
    selectedProj="Mentor Match"
    setSelectedProj={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="project-modal-container"
      >
        <div
          className="modal-heading"
        >
          <div
            className="title-container"
          >
            <h1>
              Mentor Match
            </h1>
          </div>
          <button
            className="exit-btn"
            onClick={[Function]}
          >
            X
          </button>
        </div>
        <img
          alt="screenshot of project"
          className="modal-screenshot"
          src="mentor-match-screenshot.png"
        />
        <p>
          Tech Stack: 
          React.js, Redux, Redux-thunk, CSS3, Ruby, PostgreSQL, AJAX (ES7)
        </p>
      </div>,
      "className": "project-modal-outer",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="modal-heading"
          >
            <div
              className="title-container"
            >
              <h1>
                Mentor Match
              </h1>
            </div>
            <button
              className="exit-btn"
              onClick={[Function]}
            >
              X
            </button>
          </div>,
          <img
            alt="screenshot of project"
            className="modal-screenshot"
            src="mentor-match-screenshot.png"
          />,
          <p>
            Tech Stack: 
            React.js, Redux, Redux-thunk, CSS3, Ruby, PostgreSQL, AJAX (ES7)
          </p>,
        ],
        "className": "project-modal-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="title-container"
              >
                <h1>
                  Mentor Match
                </h1>
              </div>,
              <button
                className="exit-btn"
                onClick={[Function]}
              >
                X
              </button>,
            ],
            "className": "modal-heading",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h1>
                  Mentor Match
                </h1>,
                "className": "title-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Mentor Match",
                },
                "ref": null,
                "rendered": "Mentor Match",
                "type": "h1",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "X",
                "className": "exit-btn",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "X",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "screenshot of project",
            "className": "modal-screenshot",
            "src": "mentor-match-screenshot.png",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Tech Stack: ",
              "React.js, Redux, Redux-thunk, CSS3, Ruby, PostgreSQL, AJAX (ES7)",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Tech Stack: ",
            "React.js, Redux, Redux-thunk, CSS3, Ruby, PostgreSQL, AJAX (ES7)",
          ],
          "type": "p",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="project-modal-container"
        >
          <div
            className="modal-heading"
          >
            <div
              className="title-container"
            >
              <h1>
                Mentor Match
              </h1>
            </div>
            <button
              className="exit-btn"
              onClick={[Function]}
            >
              X
            </button>
          </div>
          <img
            alt="screenshot of project"
            className="modal-screenshot"
            src="mentor-match-screenshot.png"
          />
          <p>
            Tech Stack: 
            React.js, Redux, Redux-thunk, CSS3, Ruby, PostgreSQL, AJAX (ES7)
          </p>
        </div>,
        "className": "project-modal-outer",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="modal-heading"
            >
              <div
                className="title-container"
              >
                <h1>
                  Mentor Match
                </h1>
              </div>
              <button
                className="exit-btn"
                onClick={[Function]}
              >
                X
              </button>
            </div>,
            <img
              alt="screenshot of project"
              className="modal-screenshot"
              src="mentor-match-screenshot.png"
            />,
            <p>
              Tech Stack: 
              React.js, Redux, Redux-thunk, CSS3, Ruby, PostgreSQL, AJAX (ES7)
            </p>,
          ],
          "className": "project-modal-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="title-container"
                >
                  <h1>
                    Mentor Match
                  </h1>
                </div>,
                <button
                  className="exit-btn"
                  onClick={[Function]}
                >
                  X
                </button>,
              ],
              "className": "modal-heading",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <h1>
                    Mentor Match
                  </h1>,
                  "className": "title-container",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Mentor Match",
                  },
                  "ref": null,
                  "rendered": "Mentor Match",
                  "type": "h1",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "X",
                  "className": "exit-btn",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "X",
                "type": "button",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "screenshot of project",
              "className": "modal-screenshot",
              "src": "mentor-match-screenshot.png",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Tech Stack: ",
                "React.js, Redux, Redux-thunk, CSS3, Ruby, PostgreSQL, AJAX (ES7)",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Tech Stack: ",
              "React.js, Redux, Redux-thunk, CSS3, Ruby, PostgreSQL, AJAX (ES7)",
            ],
            "type": "p",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
